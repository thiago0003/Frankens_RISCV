$version Generated by VerilatedVcd $end
$timescale 1ps $end
 $scope module TOP $end
  $var wire 1 @! clk $end
  $var wire 1 A! reset $end
  $scope module top $end
   $var wire 32 G! VGA_BITS [31:0] $end
   $var wire 1 @! clk $end
   $var wire 1 A! reset $end
   $var wire 32 - instruction [31:0] $end
   $var wire 32 B! read_data [31:0] $end
   $var wire 32 H! read_data_vga [31:0] $end
   $var wire 32 . write_data [31:0] $end
   $var wire 32 / alu_result [31:0] $end
   $var wire 1 0 mem_write $end
   $var wire 9 1 pc [8:0] $end
   $var wire 9 I! address [8:0] $end
   $var wire 9 J! addr_vga [8:0] $end
   $var wire 4 2 byte_enable [3:0] $end
   $scope module dmem $end
    $var wire 1 C! clk $end
    $var wire 1 0 mem_write $end
    $var wire 4 2 byte_en [3:0] $end
    $var wire 32 / addr [31:0] $end
    $var wire 9 J! vaddr [8:0] $end
    $var wire 32 . write_data [31:0] $end
    $var wire 32 B! read_data [31:0] $end
    $var wire 32 H! vdata [31:0] $end
    $var wire 32 ~ RAM[0] [31:0] $end
    $var wire 32 !! RAM[1] [31:0] $end
    $var wire 32 "! RAM[2] [31:0] $end
    $var wire 32 #! RAM[3] [31:0] $end
    $var wire 32 $! RAM[4] [31:0] $end
    $var wire 32 %! RAM[5] [31:0] $end
    $var wire 32 &! RAM[6] [31:0] $end
    $var wire 32 '! RAM[7] [31:0] $end
    $var wire 32 (! RAM[8] [31:0] $end
    $var wire 32 )! RAM[9] [31:0] $end
    $var wire 32 *! RAM[10] [31:0] $end
    $var wire 32 +! RAM[11] [31:0] $end
    $var wire 32 ,! RAM[12] [31:0] $end
    $var wire 32 -! RAM[13] [31:0] $end
    $var wire 32 .! RAM[14] [31:0] $end
    $var wire 32 /! RAM[15] [31:0] $end
    $var wire 32 0! RAM[16] [31:0] $end
    $var wire 32 1! RAM[17] [31:0] $end
    $var wire 32 2! RAM[18] [31:0] $end
    $var wire 32 3! RAM[19] [31:0] $end
    $var wire 32 4! RAM[20] [31:0] $end
    $var wire 32 5! RAM[21] [31:0] $end
    $var wire 32 6! RAM[22] [31:0] $end
    $var wire 32 7! RAM[23] [31:0] $end
    $var wire 32 8! RAM[24] [31:0] $end
    $var wire 32 9! RAM[25] [31:0] $end
    $var wire 32 :! RAM[26] [31:0] $end
    $var wire 32 ;! RAM[27] [31:0] $end
    $var wire 32 <! RAM[28] [31:0] $end
    $var wire 32 =! RAM[29] [31:0] $end
    $var wire 32 >! RAM[30] [31:0] $end
    $var wire 32 ?! RAM[31] [31:0] $end
    $var wire 32 K! i [31:0] $end
   $upscope $end
   $scope module franken_riscv $end
    $var wire 1 @! clk $end
    $var wire 1 A! reset $end
    $var wire 32 3 pc [31:0] $end
    $var wire 32 - instruction [31:0] $end
    $var wire 1 0 mem_write $end
    $var wire 4 2 byte_enable [3:0] $end
    $var wire 32 / alu_result [31:0] $end
    $var wire 32 . write_data [31:0] $end
    $var wire 32 B! read_data [31:0] $end
    $var wire 32 4 src1 [31:0] $end
    $var wire 32 5 src2 [31:0] $end
    $var wire 32 D! data_load [31:0] $end
    $var wire 1 6 is_conditional_jump $end
    $var wire 32 7 jump_add [31:0] $end
    $var wire 32 E! next_pc [31:0] $end
    $var wire 7 8 opcode [6:0] $end
    $var wire 5 9 rd_ [4:0] $end
    $var wire 3 : funct3_ [2:0] $end
    $var wire 5 ; rs1 [4:0] $end
    $var wire 5 < rs2 [4:0] $end
    $var wire 7 = funct7_ [6:0] $end
    $var wire 1 > R_type $end
    $var wire 1 ? I_type $end
    $var wire 1 0 S_type $end
    $var wire 1 @ B_type $end
    $var wire 1 A U_type $end
    $var wire 1 B J_type $end
    $var wire 5 C RS1 [4:0] $end
    $var wire 5 D RS2 [4:0] $end
    $var wire 5 E RD [4:0] $end
    $var wire 3 F funct3 [2:0] $end
    $var wire 7 G funct7 [6:0] $end
    $var wire 32 H imm [31:0] $end
    $var wire 1 I is_add $end
    $var wire 1 J is_addi $end
    $var wire 1 K is_sub $end
    $var wire 1 L is_xor $end
    $var wire 1 M is_or $end
    $var wire 1 N is_andi $end
    $var wire 1 O is_slli $end
    $var wire 1 P is_srli $end
    $var wire 1 Q is_auipc $end
    $var wire 1 B is_jal $end
    $var wire 1 R is_lui $end
    $var wire 1 S is_jalr $end
    $var wire 1 T is_bge $end
    $var wire 1 U is_beq $end
    $var wire 1 V is_blt $end
    $var wire 1 W is_bne $end
    $var wire 1 X is_sw $end
    $var wire 1 Y is_lw $end
    $var wire 1 Z is_sb $end
    $var wire 1 [ is_lbu $end
    $var wire 1 \ is_mem_reg $end
    $var wire 1 ] reg_write $end
    $var wire 32 / result [31:0] $end
    $scope module regs $end
     $var wire 1 @! clk $end
     $var wire 1 ] reg_write $end
     $var wire 5 C reg_addr1 [4:0] $end
     $var wire 5 D reg_addr2 [4:0] $end
     $var wire 5 E addr [4:0] $end
     $var wire 32 F! write_reg [31:0] $end
     $var wire 32 4 rd1 [31:0] $end
     $var wire 32 5 rd2 [31:0] $end
     $var wire 32 ^ rf[0] [31:0] $end
     $var wire 32 _ rf[1] [31:0] $end
     $var wire 32 ` rf[2] [31:0] $end
     $var wire 32 a rf[3] [31:0] $end
     $var wire 32 b rf[4] [31:0] $end
     $var wire 32 c rf[5] [31:0] $end
     $var wire 32 d rf[6] [31:0] $end
     $var wire 32 e rf[7] [31:0] $end
     $var wire 32 f rf[8] [31:0] $end
     $var wire 32 g rf[9] [31:0] $end
     $var wire 32 h rf[10] [31:0] $end
     $var wire 32 i rf[11] [31:0] $end
     $var wire 32 j rf[12] [31:0] $end
     $var wire 32 k rf[13] [31:0] $end
     $var wire 32 l rf[14] [31:0] $end
     $var wire 32 m rf[15] [31:0] $end
     $var wire 32 n rf[16] [31:0] $end
     $var wire 32 o rf[17] [31:0] $end
     $var wire 32 p rf[18] [31:0] $end
     $var wire 32 q rf[19] [31:0] $end
     $var wire 32 r rf[20] [31:0] $end
     $var wire 32 s rf[21] [31:0] $end
     $var wire 32 t rf[22] [31:0] $end
     $var wire 32 u rf[23] [31:0] $end
     $var wire 32 v rf[24] [31:0] $end
     $var wire 32 w rf[25] [31:0] $end
     $var wire 32 x rf[26] [31:0] $end
     $var wire 32 y rf[27] [31:0] $end
     $var wire 32 z rf[28] [31:0] $end
     $var wire 32 { rf[29] [31:0] $end
     $var wire 32 | rf[30] [31:0] $end
     $var wire 32 } rf[31] [31:0] $end
    $upscope $end
   $upscope $end
   $scope module imem $end
    $var wire 9 1 pc [8:0] $end
    $var wire 32 - instr [31:0] $end
    $var wire 32 # RAM[0] [31:0] $end
    $var wire 32 $ RAM[1] [31:0] $end
    $var wire 32 % RAM[2] [31:0] $end
    $var wire 32 & RAM[3] [31:0] $end
    $var wire 32 ' RAM[4] [31:0] $end
    $var wire 32 ( RAM[5] [31:0] $end
    $var wire 32 ) RAM[6] [31:0] $end
    $var wire 32 * RAM[7] [31:0] $end
    $var wire 32 + RAM[8] [31:0] $end
    $var wire 32 , RAM[9] [31:0] $end
   $upscope $end
  $upscope $end
 $upscope $end
$enddefinitions $end


#1
b00000000000000000000001010010011 #
b00010010110000000000001100010011 $
b00000000000000101100001110000011 %
b00000000000100111000001110010011 &
b00000000011100101000000000100011 '
b00000000000100101000001010010011 (
b00000000011000101101010001100011 )
b11111110110111111111000001101111 *
b00000000000000000000001010010011 +
b11111110010111111111000001101111 ,
b00010010110000000000001100010011 -
b00000000000000000000000000000000 .
b00000000000000000000000100101100 /
00
b000000100 1
b1111 2
b00000000000000000000000000000100 3
b00000000000000000000000000000000 4
b00000000000000000000000000000000 5
06
b00000000000000000000000000001000 7
b0010011 8
b00110 9
b000 :
b00000 ;
b01100 <
b0001001 =
0>
1?
0@
0A
0B
b00000 C
b00000 D
b00110 E
b000 F
b0000000 G
b00000000000000000000000100101100 H
0I
1J
0K
0L
0M
0N
0O
0P
0Q
0R
0S
0T
0U
0V
0W
0X
0Y
0Z
0[
0\
1]
b00000000000000000000000000000000 ^
b00000000000000000000000000000000 _
b00000000000000000000000000000000 `
b00000000000000000000000000000000 a
b00000000000000000000000000000000 b
b00000000000000000000000000000000 c
b00000000000000000000000000000000 d
b00000000000000000000000000000000 e
b00000000000000000000000000000000 f
b00000000000000000000000000000000 g
b00000000000000000000000000000000 h
b00000000000000000000000000000000 i
b00000000000000000000000000000000 j
b00000000000000000000000000000000 k
b00000000000000000000000000000000 l
b00000000000000000000000000000000 m
b00000000000000000000000000000000 n
b00000000000000000000000000000000 o
b00000000000000000000000000000000 p
b00000000000000000000000000000000 q
b00000000000000000000000000000000 r
b00000000000000000000000000000000 s
b00000000000000000000000000000000 t
b00000000000000000000000000000000 u
b00000000000000000000000000000000 v
b00000000000000000000000000000000 w
b00000000000000000000000000000000 x
b00000000000000000000000000000000 y
b00000000000000000000000000000000 z
b00000000000000000000000000000000 {
b00000000000000000000000000000000 |
b00000000000000000000000000000000 }
b00000000000000000000000000000000 ~
b00000000000000000000000000000000 !!
b00000000000000000000000000000000 "!
b00000000000000000000000000000000 #!
b00000000000000000000000000000000 $!
b00000000000000000000000000000000 %!
b00000000000000000000000000000000 &!
b00000000000000000000000000000000 '!
b00000000000000000000000000000000 (!
b00000000000000000000000000000000 )!
b00000000000000000000000000000000 *!
b00000000000000000000000000000000 +!
b00000000000000000000000000000000 ,!
b00000000000000000000000000000000 -!
b00000000000000000000000000000000 .!
b00000000000000000000000000000000 /!
b00000000000000000000000000000000 0!
b00000000000000000000000000000000 1!
b00000000000000000000000000000000 2!
b00000000000000000000000000000000 3!
b00000000000000000000000000000000 4!
b00000000000000000000000000000000 5!
b00000000000000000000000000000000 6!
b00000000000000000000000000000000 7!
b00000000000000000000000000000000 8!
b00000000000000000000000000000000 9!
b00000000000000000000000000000000 :!
b00000000000000000000000000000000 ;!
b00000000000000000000000000000000 <!
b00000000000000000000000000000000 =!
b00000000000000000000000000000000 >!
b00000000000000000000000000000000 ?!
1@!
0A!
b00000000000000000000000000000000 B!
0C!
b00000000000000000000000000000000 D!
b00000000000000000000000000001000 E!
b00000000000000000000000100101100 F!
b00000000000000000000000000001000 G!
b00000000000000000000000000000000 H!
b000000000 I!
b000000000 J!
b00000000000000000000000000000000 K!
#2
0@!
1C!
#3
b00000000000000101100001110000011 -
b00000000000000000000000000000000 /
b000001000 1
b0001 2
b00000000000000000000000000001000 3
b00000000000000000000000000001100 7
b0000011 8
b00111 9
b100 :
b00101 ;
b00000 <
b0000000 =
b00101 C
b00111 E
b100 F
b00000000000000000000000000000000 H
0J
1[
1\
b00000000000000000000000100101100 d
1@!
0C!
b00000000000000000000000000001100 E!
b00000000000000000000000000000000 F!
#4
0@!
1C!
#5
b00000000000100111000001110010011 -
b00000000000000000000000000000001 /
b000001100 1
b1111 2
b00000000000000000000000000001100 3
b00000000000000000000000000010000 7
b0010011 8
b000 :
b00111 ;
b00001 <
b00111 C
b000 F
b00000000000000000000000000000001 H
1J
0[
0\
1@!
0C!
b00000000000000000000000000010000 E!
b00000000000000000000000000000001 F!
#6
0@!
1C!
#7
b00000000011100101000000000100011 -
b00000000000000000000000000000001 .
b00000000000000000000000000000000 /
10
b000010000 1
b0001 2
b00000000000000000000000000010000 3
b00000000000000000000000000000001 5
b00000000000000000000000000010100 7
b0100011 8
b00000 9
b00101 ;
b00111 <
0?
b00101 C
b00111 D
b00000 E
b00000000000000000000000000000000 H
0J
1Z
0]
b00000000000000000000000000000001 e
1@!
0C!
b00000000000000000000000000010100 E!
b00000000000000000000000000000000 F!
#8
b00000000000000000000000000000001 ~
0@!
b00000000000000000000000000000001 B!
1C!
b00000000000000000000000000000001 D!
#9
b00000000000100101000001010010011 -
b00000000000000000000000000000000 .
b00000000000000000000000000000001 /
00
b000010100 1
b1111 2
b00000000000000000000000000010100 3
b00000000000000000000000000000000 5
b00000000000000000000000000011000 7
b0010011 8
b00101 9
b00001 <
1?
b00000 D
b00101 E
b00000000000000000000000000000001 H
1J
0Z
1]
1@!
0C!
b00000000000000000000000000011000 E!
b00000000000000000000000000000001 F!
#10
0@!
1C!
#11
b00000000011000101101010001100011 -
b00000000000000000000000000000000 /
b000011000 1
b00000000000000000000000000011000 3
b00000000000000000000000000000001 4
b00000000000000000000000100101100 5
16
b00000000000000000000000000011100 7
b1100011 8
b01000 9
b101 :
b00110 <
0?
1@
b00110 D
b00000 E
b101 F
b00000000000000000000000000001000 H
0J
1T
0]
b00000000000000000000000000000001 c
1@!
0C!
b00000000000000000000000000011100 E!
b00000000000000000000000000000000 F!
#12
0@!
1C!
#13
b11111110110111111111000001101111 -
b00000000000000000000000000001000 /
b000011100 1
b00000000000000000000000000011100 3
b00000000000000000000000000000000 4
b00000000000000000000000000000000 5
b00000000000000000000000000001000 7
b1101111 8
b00000 9
b111 :
b11111 ;
b01101 <
b1111111 =
0@
1B
b00000 C
b00000 D
b000 F
b11111111111111111111111111101100 H
0T
1@!
b00000000000000000000000000000000 B!
0C!
b00000000000000000000000000000000 D!
b00000000000000000000000000001000 E!
b00000000000000000000000000001000 F!
#14
0@!
1C!
#15
b00000000000000101100001110000011 -
b00000000000000000000000000000001 /
b000001000 1
b0010 2
b00000000000000000000000000001000 3
b00000000000000000000000000000001 4
06
b00000000000000000000000000001100 7
b0000011 8
b00111 9
b100 :
b00101 ;
b00000 <
b0000000 =
1?
0B
b00101 C
b00111 E
b100 F
b00000000000000000000000000000000 H
1[
1\
1]
1@!
b00000000000000000000000000000001 B!
0C!
b00000000000000000000000000001100 E!
b00000000000000000000000000000000 F!
#16
0@!
1C!
#17
b00000000000100111000001110010011 -
b000001100 1
b1111 2
b00000000000000000000000000001100 3
b00000000000000000000000000000000 4
b00000000000000000000000000010000 7
b0010011 8
b000 :
b00111 ;
b00001 <
b00111 C
b000 F
b00000000000000000000000000000001 H
1J
0[
0\
b00000000000000000000000000000000 e
1@!
0C!
b00000000000000000000000000000001 D!
b00000000000000000000000000010000 E!
b00000000000000000000000000000001 F!
#18
0@!
1C!
#19
b00000000011100101000000000100011 -
b00000000000000000000000100000000 .
10
b000010000 1
b0010 2
b00000000000000000000000000010000 3
b00000000000000000000000000000001 4
b00000000000000000000000000000001 5
b00000000000000000000000000010100 7
b0100011 8
b00000 9
b00101 ;
b00111 <
0?
b00101 C
b00111 D
b00000 E
b00000000000000000000000000000000 H
0J
1Z
0]
b00000000000000000000000000000001 e
1@!
0C!
b00000000000000000000000000010100 E!
