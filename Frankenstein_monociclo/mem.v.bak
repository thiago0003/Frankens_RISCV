/* verilator lint_off DECLFILENAME */
/* verilator lint_off WIDTHTRUNC */
/* verilator lint_off MULTITOP */
/* verilator lint_off UNUSEDSIGNAL */
 // Modulo de memoria de programa 
module dmem( input clk, mem_write,
             input  [ 3:0] byte_en,
             input  [31:0] addr,
             input  [ 8:0] vaddr,
             input  [31:0] write_data,
             output [31:0] read_data,
             output [31:0] vdata
);

  reg [31:0] RAM [0:3000];
  integer i;

  initial
  begin
    RAM[0]  = 32'h00000001;
    RAM[1]  = 32'h00000000;
    RAM[2]  = 32'h00000000;
    RAM[3]  = 32'h00000000;
    RAM[4]  = 32'h00000000;
    RAM[5]  = 32'h00000000;
    RAM[6]  = 32'h00000000;
    RAM[7]  = 32'h00000000;
    RAM[8]  = 32'h00000000;
    RAM[9]  = 32'h00000000;
    RAM[10] = 32'h00000000;
    RAM[11] = 32'h00000000;
    RAM[12] = 32'h00000000;
    RAM[13] = 32'h00000000;
    RAM[14] = 32'h00000000;
    RAM[15] = 32'h00000000;
    RAM[16] = 32'h00000000;
    RAM[17] = 32'h00000000;
    RAM[18] = 32'h00000000;
    RAM[19] = 32'h00000000;
    RAM[20] = 32'h00000000;
    RAM[21] = 32'h00000000;
    RAM[22] = 32'h00000000;
    RAM[23] = 32'h00000000;
    RAM[24] = 32'h00000000;
    RAM[25] = 32'h00000000;
    RAM[26] = 32'h00000000;
    RAM[27] = 32'h00000000;
    RAM[28] = 32'h00000000;
    RAM[29] = 32'h00000000;
    RAM[30] = 32'h00000000;
    RAM[31] = 32'h00000000;
  end

  assign vdata = RAM[{25'b0000000000000000000000000, vaddr[8:2]}]; // word aligned
  assign read_data = RAM[{2'b00, addr[31:2]}]; // word aligned
  
  always @(posedge clk) 
    if (mem_write) 
	 begin
        //$display("RAM[%d] = %h -> %h (%b)", addr, read_data, write_data, byte_en);
		if (byte_en[0])
		  RAM[addr[31:2]][ 7: 0] <= write_data[ 7: 0];
		if (byte_en[1])
		  RAM[addr[31:2]][15: 8] <= write_data[15: 8];
		if (byte_en[2])
		  RAM[addr[31:2]][23:16] <= write_data[23:16];
		if (byte_en[3])
		  RAM[addr[31:2]][31:24] <= write_data[31:24];
	 end
endmodule

// Modulo de memoria das instruÃ§oes
module imem( input  [8:0]  pc,
             output [31:0] instr
);

  reg [31:0] RAM[0:334];

  initial
  begin
      $readmemh("mem.txt", RAM);
    // RAM[0]  = 32'hfe010113; 
    // RAM[1]  = 32'h00112e23; 
    // RAM[2]  = 32'h00812c23; 
    // RAM[3]  = 32'h00912a23;
    // RAM[4]  = 32'h01212823;
    // RAM[5]  = 32'h01312623;
    // RAM[6]  = 32'h02010413;
    // RAM[7]  = 32'h00000493;
    // RAM[8]  = 32'h0580006f;
    // RAM[9]  = 32'h000037b7;
    // RAM[10] = 32'h00078793;
    // RAM[11] = 32'h009787b3;
    // RAM[12] = 32'h0007c703;
    // RAM[13] = 32'h000037b7;
    // RAM[14] = 32'h00078793;
    // RAM[15] = 32'h009787b3;
    // RAM[16] = 32'h00e78023;
    // RAM[17] = 32'h000017b7;
    // RAM[18] = 32'h00078793;
    // RAM[19] = 32'h91078793;
    // RAM[20] = 32'h00f487b3;
    // RAM[21] = 32'h00003737;
    // RAM[22] = 32'h00070713;
    // RAM[23] = 32'h00f707b3;
    // RAM[24] = 32'h0007c703;
    // RAM[25] = 32'h000037b7;
    // RAM[26] = 32'h00078793;
    // RAM[27] = 32'h009787b3;
    // RAM[28] = 32'h00e78023;
    // RAM[29] = 32'h00148493;
    // RAM[30] = 32'h02700793;
    // RAM[31] = 32'hfa97d4e3;
    // RAM[32] = 32'h00000493;
    // RAM[33] = 32'h2900006f;
    // RAM[34] = 32'h00000913;
    // RAM[35] = 32'h1dc0006f;
    // RAM[36] = 32'h00090663;
    // RAM[37] = 32'hfff90793;
    // RAM[38] = 32'h0080006f;
    // RAM[39] = 32'h02700793;
// RAM[40] = 32'h00003737;
// RAM[41] = 32'h00070713;
// RAM[42] = 32'h00f707b3;
// RAM[43] = 32'h0007c703;
// RAM[44] = 32'h000037b7;
// RAM[45] = 32'h00078793;
// RAM[46] = 32'h012787b3;
// RAM[47] = 32'h0007c783;
// RAM[48] = 32'h00f707b3;
// RAM[49] = 32'h0ff7f713;
// RAM[50] = 32'h02700793;
// RAM[51] = 32'h00f90663;
// RAM[52] = 32'h00190793;
// RAM[53] = 32'h0080006f;
// RAM[54] = 32'h00000793;
// RAM[55] = 32'h000036b7;
// RAM[56] = 32'h00068693;
// RAM[57] = 32'h00f687b3;
// RAM[58] = 32'h0007c783;
// RAM[59] = 32'h00f707b3;
// RAM[60] = 32'h0ff7f713;
// RAM[61] = 32'h00649693;
// RAM[62] = 32'h00449793;
// RAM[63] = 32'h00f686b3;
// RAM[64] = 32'h00090663;
// RAM[65] = 32'hfff90793;
// RAM[66] = 32'h0080006f;
// RAM[67] = 32'h02700793;
// RAM[68] = 32'h00d787b3;
// RAM[69] = 32'h000036b7;
// RAM[70] = 32'h00068693;
// RAM[71] = 32'h00f687b3;
// RAM[72] = 32'h0007c783;
// RAM[73] = 32'h00f707b3;
// RAM[74] = 32'h0ff7f713;
// RAM[75] = 32'h00649693;
// RAM[76] = 32'h00449793;
// RAM[77] = 32'h00f686b3;
// RAM[78] = 32'h02700793;
// RAM[79] = 32'h00f90663;
// RAM[80] = 32'h00190793;
// RAM[81] = 32'h0080006f;
// RAM[82] = 32'h00000793;
// RAM[83] = 32'h00d787b3;
// RAM[84] = 32'h000036b7;
// RAM[85] = 32'h00068693;
// RAM[86] = 32'h00f687b3;
// RAM[87] = 32'h0007c783;
// RAM[88] = 32'h00f707b3;
// RAM[89] = 32'h0ff7f713;
// RAM[90] = 32'h00148793;
// RAM[91] = 32'h00679693;
// RAM[92] = 32'h00148793;
// RAM[93] = 32'h00479793;
// RAM[94] = 32'h00f686b3;
// RAM[95] = 32'h00090663;
// RAM[96] = 32'hfff90793;
// RAM[97] = 32'h0080006f;
// RAM[98] = 32'h02700793;
// RAM[99] = 32'h00d787b3;
// RAM[100] = 32'h000036b7;
// RAM[101] = 32'h00068693;
// RAM[102] = 32'h00f687b3;
// RAM[103] = 32'h0007c783;
// RAM[104] = 32'h00f707b3;
// RAM[105] = 32'h0ff7f713;
// RAM[106] = 32'h00148793;
// RAM[107] = 32'h00679693;
// RAM[108] = 32'h00148793;
// RAM[109] = 32'h00479793;
// RAM[110] = 32'h00f687b3;
// RAM[111] = 32'h00f907b3;
// RAM[112] = 32'h000036b7;
// RAM[113] = 32'h00068693;
// RAM[114] = 32'h00f687b3;
// RAM[115] = 32'h0007c783;
// RAM[116] = 32'h00f707b3;
// RAM[117] = 32'h0ff7f713;
// RAM[118] = 32'h00148793;
// RAM[119] = 32'h00679693;
// RAM[120] = 32'h00148793;
// RAM[121] = 32'h00479793;
// RAM[122] = 32'h00f686b3;
// RAM[123] = 32'h02700793;
// RAM[124] = 32'h00f90663;
// RAM[125] = 32'h00190793;
// RAM[126] = 32'h0080006f;
// RAM[127] = 32'h00000793;
// RAM[128] = 32'h00d787b3;
// RAM[129] = 32'h000036b7;
// RAM[130] = 32'h00068693;
// RAM[131] = 32'h00f687b3;
// RAM[132] = 32'h0007c783;
// RAM[133] = 32'h00f707b3;
// RAM[134] = 32'h0ff7f993;
// RAM[135] = 32'h00649713;
// RAM[136] = 32'h00449793;
// RAM[137] = 32'h00f707b3;
// RAM[138] = 32'h00f907b3;
// RAM[139] = 32'h00003737;
// RAM[140] = 32'h00070713;
// RAM[141] = 32'h00f707b3;
// RAM[142] = 32'h0007c783;
// RAM[143] = 32'h00f9e7b3;
// RAM[144] = 32'h0ff7f793;
// RAM[145] = 32'hffd78793;
// RAM[146] = 32'h0017b793;
// RAM[147] = 32'h0ff7f793;
// RAM[148] = 32'h00f00733;
// RAM[149] = 32'h000037b7;
// RAM[150] = 32'h00078793;
// RAM[151] = 32'h012787b3;
// RAM[152] = 32'h00e78023;
// RAM[153] = 32'h00190913;
// RAM[154] = 32'h02700793;
// RAM[155] = 32'he327d2e3;
// RAM[156] = 32'h00000913;
// RAM[157] = 32'h0940006f;
// RAM[158] = 32'h00649713;
// RAM[159] = 32'h00449793;
// RAM[160] = 32'h00f707b3;
// RAM[161] = 32'h00f907b3;
// RAM[162] = 32'h00003737;
// RAM[163] = 32'h00070713;
// RAM[164] = 32'h00f707b3;
// RAM[165] = 32'h0007c703;
// RAM[166] = 32'h000037b7;
// RAM[167] = 32'h00078793;
// RAM[168] = 32'h012787b3;
// RAM[169] = 32'h00e78023;
// RAM[170] = 32'h02905e63;
// RAM[171] = 32'hfff48793;
// RAM[172] = 32'h00679713;
// RAM[173] = 32'hfff48793;
// RAM[174] = 32'h00479793;
// RAM[175] = 32'h00f707b3;
// RAM[176] = 32'h00f907b3;
// RAM[177] = 32'h00003737;
// RAM[178] = 32'h00070713;
// RAM[179] = 32'h01270733;
// RAM[180] = 32'h00074703;
// RAM[181] = 32'h000036b7;
// RAM[182] = 32'h00068693;
// RAM[183] = 32'h00f687b3;
// RAM[184] = 32'h00e78023;
// RAM[185] = 32'h000037b7;
// RAM[186] = 32'h00078793;
// RAM[187] = 32'h012787b3;
// RAM[188] = 32'h0007c703;
// RAM[189] = 32'h000037b7;
// RAM[190] = 32'h00078793;
// RAM[191] = 32'h012787b3;
// RAM[192] = 32'h00e78023;
// RAM[193] = 32'h00190913;
// RAM[194] = 32'h02700793;
// RAM[195] = 32'hf727d6e3;
// RAM[196] = 32'h00148493;
// RAM[197] = 32'h01c00793;
// RAM[198] = 32'hd697d8e3;
// RAM[199] = 32'h00000493;
// RAM[200] = 32'h19c0006f;
// RAM[201] = 32'h00048663;
// RAM[202] = 32'hfff48793;
// RAM[203] = 32'h0080006f;
// RAM[204] = 32'h02700793;
// RAM[205] = 32'h00003737;
// RAM[206] = 32'h00070713;
// RAM[207] = 32'h00f707b3;
// RAM[208] = 32'h0007c703;
// RAM[209] = 32'h000037b7;
// RAM[210] = 32'h00078793;
// RAM[211] = 32'h009787b3;
// RAM[212] = 32'h0007c783;
// RAM[213] = 32'h00f707b3;
// RAM[214] = 32'h0ff7f713;
// RAM[215] = 32'h02700793;
// RAM[216] = 32'h00f48663;
// RAM[217] = 32'h00148793;
// RAM[218] = 32'h0080006f;
// RAM[219] = 32'h00000793;
// RAM[220] = 32'h000036b7;
// RAM[221] = 32'h00068693;
// RAM[222] = 32'h00f687b3;
// RAM[223] = 32'h0007c783;
// RAM[224] = 32'h00f707b3;
// RAM[225] = 32'h0ff7f713;
// RAM[226] = 32'h00048c63;
// RAM[227] = 32'h000017b7;
// RAM[228] = 32'h00078793;
// RAM[229] = 32'h90f78793;
// RAM[230] = 32'h00f487b3;
// RAM[231] = 32'h0100006f;
// RAM[232] = 32'h000017b7;
// RAM[233] = 32'h00078793;
// RAM[234] = 32'h93778793;
// RAM[235] = 32'h000036b7;
// RAM[236] = 32'h00068693;
// RAM[237] = 32'h00f687b3;
// RAM[238] = 32'h0007c783;
// RAM[239] = 32'h00f707b3;
// RAM[240] = 32'h0ff7f713;
// RAM[241] = 32'h02700793;
// RAM[242] = 32'h00f48c63;
// RAM[243] = 32'h000017b7;
// RAM[244] = 32'h00078793;
// RAM[245] = 32'h91178793;
// RAM[246] = 32'h00f487b3;
// RAM[247] = 32'h0100006f;
// RAM[248] = 32'h000017b7;
// RAM[249] = 32'h00078793;
// RAM[250] = 32'h91078793;
// RAM[251] = 32'h000036b7;
// RAM[252] = 32'h00068693;
// RAM[253] = 32'h00f687b3;
// RAM[254] = 32'h0007c783;
// RAM[255] = 32'h00f707b3;
// RAM[256] = 32'h0ff7f713;
// RAM[257] = 32'h00048663;
// RAM[258] = 32'hfff48793;
// RAM[259] = 32'h0080006f;
// RAM[260] = 32'h02700793;
// RAM[261] = 32'h000036b7;
// RAM[262] = 32'h00068693;
// RAM[263] = 32'h00f687b3;
// RAM[264] = 32'h0007c783;
// RAM[265] = 32'h00f707b3;
// RAM[266] = 32'h0ff7f713;
// RAM[267] = 32'h000037b7;
// RAM[268] = 32'h00078793;
// RAM[269] = 32'h009787b3;
// RAM[270] = 32'h0007c783;
// RAM[271] = 32'h00f707b3;
// RAM[272] = 32'h0ff7f713;
// RAM[273] = 32'h02700793;
// RAM[274] = 32'h00f48663;
// RAM[275] = 32'h00148793;
// RAM[276] = 32'h0080006f;
// RAM[277] = 32'h00000793;
// RAM[278] = 32'h000036b7;
// RAM[279] = 32'h00068693;
// RAM[280] = 32'h00f687b3;
// RAM[281] = 32'h0007c783;
// RAM[282] = 32'h00f707b3;
// RAM[283] = 32'h0ff7f993;
// RAM[284] = 32'h000017b7;
// RAM[285] = 32'h00078793;
// RAM[286] = 32'h91078793;
// RAM[287] = 32'h00f487b3;
// RAM[288] = 32'h00003737;
// RAM[289] = 32'h00070713;
// RAM[290] = 32'h00f707b3;
// RAM[291] = 32'h0007c783;
// RAM[292] = 32'h00f9e7b3;
// RAM[293] = 32'h0ff7f793;
// RAM[294] = 32'hffd78793;
// RAM[295] = 32'h0017b793;
// RAM[296] = 32'h0ff7f793;
// RAM[297] = 32'h00f00733;
// RAM[298] = 32'h000037b7;
// RAM[299] = 32'h00078793;
// RAM[300] = 32'h009787b3;
// RAM[301] = 32'h00e78023;
// RAM[302] = 32'h00148493;
// RAM[303] = 32'h02700793;
// RAM[304] = 32'he697d2e3;
// RAM[305] = 32'h00000493;
// RAM[306] = 32'h0680006f;
// RAM[307] = 32'h000017b7;
// RAM[308] = 32'h00078793;
// RAM[309] = 32'h8c078793;
// RAM[310] = 32'h00f487b3;
// RAM[311] = 32'h00003737;
// RAM[312] = 32'h00070713;
// RAM[313] = 32'h00970733;
// RAM[314] = 32'h00074703;
// RAM[315] = 32'h000036b7;
// RAM[316] = 32'h00068693;
// RAM[317] = 32'h00f687b3;
// RAM[318] = 32'h00e78023;
// RAM[319] = 32'h000017b7;
// RAM[320] = 32'h00078793;
// RAM[321] = 32'h91078793;
// RAM[322] = 32'h00f487b3;
// RAM[323] = 32'h00003737;
// RAM[324] = 32'h00070713;
// RAM[325] = 32'h00970733;
// RAM[326] = 32'h00074703;
// RAM[327] = 32'h000036b7;
// RAM[328] = 32'h00068693;
// RAM[329] = 32'h00f687b3;
// RAM[330] = 32'h00e78023;
// RAM[331] = 32'h00148493;
// RAM[332] = 32'h02700793;
// RAM[333] = 32'hf897dce3;
// RAM[334] = 32'hae5ff06f;
// 
  end

  assign instr = RAM[{25'b0000000000000000000000000, pc[8:2]}]; // word aligned
endmodule
